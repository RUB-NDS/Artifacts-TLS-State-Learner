/*
 * TLS-StateBulnFinder - A state machine analysis tool based on TLS-Attacker
 *
 * Copyright 2020-2023 Ruhr University Bochum and Paderborn University
 *
 * Licensed under Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0.txt
 */
package de.rub.nds.statevulnfinder.core.issue;

import de.rub.nds.statevulnfinder.core.algorithm.words.TlsWord;
import de.rub.nds.statevulnfinder.core.constants.StateMachineIssueType;
import de.rub.nds.tlsscanner.core.vector.response.EqualityError;
import de.rub.nds.tlsscanner.core.vector.response.ResponseFingerprint;
import java.util.List;

/**
 * @author robert
 */
public class SameStateBleichenbacherVulnerability extends BBAndPOVulnerability {

    private final Object sourceNode;
    private final Object targetNode;
    private final ResponseFingerprint firstEdge;
    private final ResponseFingerprint secondEdge;
    private final EqualityError equalityError;
    private final List<TlsWord> accessSequence;
    private final TlsWord firstWord;
    private final TlsWord secondWord;

    public SameStateBleichenbacherVulnerability(
            Object sourceNode,
            Object targetNode,
            ResponseFingerprint firstEdge,
            ResponseFingerprint secondEdge,
            EqualityError equalityError,
            String reason,
            TlsWord firstWord,
            TlsWord secondWord,
            List<TlsWord> accessSequence) {
        super(StateMachineIssueType.BLEICHENBACHER, reason);
        this.sourceNode = sourceNode;
        this.targetNode = targetNode;
        this.firstEdge = firstEdge;
        this.secondEdge = secondEdge;
        this.equalityError = equalityError;
        this.accessSequence = accessSequence;
        this.firstWord = firstWord;
        this.secondWord = secondWord;
    }

    @Override
    public TlsWord getFirstWord() {
        return firstWord;
    }

    @Override
    public TlsWord getSecondWord() {
        return secondWord;
    }

    public Object getSourceNode() {
        return sourceNode;
    }

    public Object getTargetNode() {
        return targetNode;
    }

    public ResponseFingerprint getFirstEdge() {
        return firstEdge;
    }

    public ResponseFingerprint getSecondEdge() {
        return secondEdge;
    }

    public EqualityError getEqualityError() {
        return equalityError;
    }

    @Override
    public String toString() {
        return "SameStateBleichenbacherVulnerability{"
                + "sourceState="
                + sourceNode
                + ", targetState="
                + targetNode
                + ", firtsInput="
                + firstWord
                + ", secondInput="
                + secondWord
                + ", firstEdge="
                + firstEdge
                + ", secondEdge="
                + secondEdge
                + ", equalityError="
                + equalityError
                + '}';
    }

    @Override
    public List<TlsWord> getPath() {
        return accessSequence;
    }
}
