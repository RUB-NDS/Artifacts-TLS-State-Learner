<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.rub.nds.tls</groupId>
        <artifactId>tls-state-vuln-finder</artifactId>
        <version>1.3-SNAPSHOT</version>
    </parent>
    <artifactId>tls-state-vuln-finder-core</artifactId>
    <version>1.3-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>TLS-StateVulnFinder-Core</name>

    <properties>
        <main.basedir>${project.parent.basedir}</main.basedir>
        <learnlib.version>0.16.0</learnlib.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>de.learnlib</groupId>
                <artifactId>learnlib-parent</artifactId>
                <version>${learnlib.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.rub.nds</groupId>
                <artifactId>scanner-core</artifactId>
                <version>5.3.1b</version>
            </dependency>
            <dependency>
                <groupId>de.rub.nds.tls.scanner</groupId>
                <artifactId>tls-scanner-core</artifactId>
                <version>5.3.1b</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-api</artifactId>
        </dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-dhc</artifactId>
        </dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-equivalence-oracles</artifactId>
        </dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-kearns-vazirani</artifactId>
        </dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-lstar</artifactId>
        </dependency>
        <dependency>
            <groupId>de.learnlib</groupId>
            <artifactId>learnlib-ttt</artifactId>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.attacker</groupId>
            <artifactId>tls-core</artifactId>
            <version>5.2.1b</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.attacker</groupId>
            <artifactId>transport</artifactId>
            <version>5.2.1b</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.scanner</groupId>
            <artifactId>tls-client-scanner</artifactId>
            <version>5.3.1b</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.scanner</groupId>
            <artifactId>tls-scanner-core</artifactId>
            <version>5.3.1b</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.scanner</groupId>
            <artifactId>tls-server-scanner</artifactId>
            <version>5.3.1b</version>
        </dependency>
        <dependency>
            <groupId>net.automatalib</groupId>
            <artifactId>automata-serialization-dot</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!--################## clean lifecycle plugins ##################-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
            <!--################# default lifecycle plugins #################-->
            <!-- Copy project resources to output directory -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <!-- Compile source files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <!-- Execute unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <!-- Build jar file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <!-- Compile javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <!-- Pack source files to jar archive -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <!-- Execute integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>coverage</id>
            <build>
                <plugins>
                    <!-- Record test coverage with JaCoCo -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
